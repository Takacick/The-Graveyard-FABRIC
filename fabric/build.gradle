plugins {
	id "com.github.johnrengelman.shadow" version "7.1.2"
}

allprojects {
	archivesBaseName = "${rootProject.mod_id}-fabric-mc${rootProject.minecraft_version}"
}

architectury {
	platformSetupLoomIde()
	fabric()
}

configurations {
	common
	shadowCommon // Don't use shadow from the shadow plugin since it *excludes* files.
	compileClasspath.extendsFrom common
	runtimeClasspath.extendsFrom common
	developmentFabric.extendsFrom common
}

loom {
	accessWidenerPath = project(":common").loom.accessWidenerPath
}

repositories {
	maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
}

dependencies {
	modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"

	modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"
	//modApi "dev.architectury:architectury-fabric:${rootProject.architectury_version}"

	modImplementation "software.bernie.geckolib:geckolib-fabric-${rootProject.minecraft_version}:${rootProject.geckolib_version_fabric}"

	common(project(path: ":common", configuration: "namedElements")) { transitive false }
	shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) { transitive false }
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

remapJar {
	injectAccessWidener = true
	input.set shadowJar.archiveFile
	dependsOn shadowJar
	classifier null
}

jar {
	classifier "dev"
	setArchivesBaseName("graveyard-FABRIC");
}

sourcesJar {
	def commonSources = project(":common").sourcesJar
	dependsOn commonSources
	from commonSources.archiveFile.map { zipTree(it) }
	duplicatesStrategy 'exclude'
}

components.java {
	withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
		skip()
	}
}

publishing {
	publications {
		mavenFabric(MavenPublication) {
			artifactId = rootProject.archives_base_name + "-" + project.name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
	}
}
